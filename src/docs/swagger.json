{
  "swagger" : "2.0",
  "info" : {
    "description" : "Documentação da definição das rotas da API",
    "version" : "1.0.0",
    "title" : "Desafio Webedia Blog API"
  },
  "basePath" : "/api/",
  "tags" : [ {
    "name" : "Desafio Webedia"
  } ],
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/auth/login/" : {
      "post" : {
        "tags" : [ "Autenticação" ],
        "description" : "Autentica o usuário no sistema através de um token  como resposta.",
        "operationId" : "loginUser",
        "produces" : [ "aplication/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "login",
          "description" : "Username e senha para efetuar a autenticação",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserLogin"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Usuário autenticado com sucesso.",
            "headers" : {
              "X-Rate-Limit" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "calls per hour allowed by the user"
              },
              "X-Expires-After" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "date in UTC when toekn expires"
              }
            }
          },
          "400" : {
            "description" : "Nome de Usuário e Senha são obrigatórios.",
            "schema" : {
              "$ref" : "#/definitions/UserLogin"
            }
          },
          "401" : {
            "description" : "Usuário não autenticado!",
            "schema" : {
              "$ref" : "#/definitions/UserLogin"
            }
          },
          "404" : {
            "description" : "Usuário ou senha inválidos",
            "schema" : {
              "$ref" : "#/definitions/UserLogin"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar autenticar o usuário.",
            "schema" : {
              "$ref" : "#/definitions/UserLogin"
            }
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "Usuários" ],
        "summary" : "Retorna todos os usuários cadastrados do sistema. Para realizar esta operação o usuário precisa estar autenticado.",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "Token gerado através da autenticação para ser feito o login.",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "Usuário não encontrado.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar encontrar os usuários cadastrados.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Usuários" ],
        "description" : "Cria um novo usuário.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "users",
          "description" : "Cadastro do usuário no blog.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Usuário criado com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "403" : {
            "description" : "Nome de usuário já está sendo usado.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar cadastrar o usuário.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Usuários" ],
        "summary" : "Atualiza o usuário de acordo com o ID passado como parâmetro. Para realizar esta operação o usuário precisa estar autenticado.",
        "parameters" : [ {
          "in" : "body",
          "name" : "users",
          "description" : "Altera atributos do usuário cadastrado.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "Token gerado através da autenticação para ser feito o login.",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Usuário atualizado com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "Usuário não encontrado.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar atualizar o usuário.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Usuários" ],
        "summary" : "Remove o usuário de acordo com o ID passado como parâmetro.",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "description" : "Token gerado através da autenticação para ser feito o login. Para realizar esta operação o usuário precisa estar autenticado.",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Usuário removido com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "Usuário não encontrado.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar remover o usuário.",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/author" : {
      "get" : {
        "tags" : [ "Autores" ],
        "summary" : "Retorna todos os autores cadastrados do blog.",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Número de registros que serão pulados na consulta dos autores.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limite de autores a serem retornados por página.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar encontrar os autores.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Autores" ],
        "description" : "Cria um novo autor.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "author",
          "description" : "Cadastro de um reclamante no blog.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Author"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Reclamante criado com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar cadastrar o reclamante.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          }
        }
      }
    },
    "/author/{id}" : {
      "get" : {
        "tags" : [ "Autores" ],
        "summary" : "Retorna o autor de acordo com o ID passado como parâmetro.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID do autor a ser buscado.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "404" : {
            "description" : "Este autor não existe.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar encontrar o autor.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Autores" ],
        "summary" : "Atualiza o autor de acordo com o ID passado como parâmetro.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID do autor a ser buscado.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Autores",
          "description" : "Altera atributos do autor cadastrado.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Author"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Autor atualizado com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "404" : {
            "description" : "Este autor não existe.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar atualizar o autor.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Autores" ],
        "summary" : "Remove o autor de acordo com o ID passado como parâmetro.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID do autor a ser buscado.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Autor removido com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "404" : {
            "description" : "Reclamante inexistente!",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar remover o autor.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          }
        }
      }
    },
    "/articles" : {
      "get" : {
        "tags" : [ "Artigos" ],
        "summary" : "Retorna todos os artigos cadastrados do blog.",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Número de registros que serão pulados na consulta dos artigos.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limite de artigos a serem retornados por página.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar encontrar os artigos cadastrados.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Artigos" ],
        "description" : "Cria um novo artigo.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Artigos",
          "description" : "Cadastro do artigo no blog.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Article"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Artigo criado com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/Article"
            }
          },
          "404" : {
            "description" : "Este autor não existe.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "406" : {
            "description" : "É obrigatório um artigo ter autor!",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar cadastrar o autor.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          }
        }
      }
    },
    "/article/{permalink}" : {
      "get" : {
        "tags" : [ "Artigos" ],
        "summary" : "Retorna o artigo de acordo com o permalink passado como parâmetro.",
        "parameters" : [ {
          "name" : "permalink",
          "in" : "path",
          "description" : "Permalink do artigo a ser buscado.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok.",
            "schema" : {
              "$ref" : "#/definitions/Article"
            }
          },
          "404" : {
            "description" : "Este artigo não existe.",
            "schema" : {
              "$ref" : "#/definitions/Article"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar encontrar o artigo.",
            "schema" : {
              "$ref" : "#/definitions/Article"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Artigos" ],
        "summary" : "Atualiza o artigo de acordo com o ID passado como parâmetro.",
        "parameters" : [ {
          "name" : "permalink",
          "in" : "path",
          "description" : "Permalink do artigo a ser buscado.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Artigos",
          "description" : "Altera atributos do artigo cadastrado.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Article"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Artigo atualizado com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/Article"
            }
          },
          "404" : {
            "description" : "Este artigo não existe.",
            "schema" : {
              "$ref" : "#/definitions/Article"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar atualizar o artigo.",
            "schema" : {
              "$ref" : "#/definitions/Article"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Artigos" ],
        "summary" : "Remove o artigo de acordo com o ID passado como parâmetro.",
        "parameters" : [ {
          "name" : "permalink",
          "in" : "path",
          "description" : "Permalink do artigo a ser buscado.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Artigo removido com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/Article"
            }
          },
          "404" : {
            "description" : "Este artigo não existe!",
            "schema" : {
              "$ref" : "#/definitions/Article"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar remover o artigo.",
            "schema" : {
              "$ref" : "#/definitions/Article"
            }
          }
        }
      }
    },
    "/comments/{permalink}" : {
      "get" : {
        "tags" : [ "Comentários" ],
        "summary" : "Retorna todos os comentários de um  artigo  do blog. Para realizar esta operação o usuário precisa estar autenticado",
        "parameters" : [ {
          "name" : "permalink",
          "in" : "path",
          "description" : "Permalink do artigo a ser buscado.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "Token gerado através da autenticação para ser feito o login.",
          "required" : true,
          "type" : "string",
          "format" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Número de registros que serão pulados na consulta dos comentários.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limite de comentários a serem retornados por página.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar encontrar os comentários cadastrados.",
            "schema" : {
              "$ref" : "#/definitions/Author"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Comentários" ],
        "description" : "Cria um novo comentário em um artigo. Para realizar esta operação o usuário precisa estar autenticado.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "permalink",
          "in" : "path",
          "description" : "Permalink do artigo a ser buscado.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "Token gerado através da autenticação para ser feito o login.",
          "required" : true,
          "type" : "string",
          "format" : "string"
        }, {
          "in" : "body",
          "name" : "Comentários",
          "description" : "Cadastro de comentário em um artigo no blog.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Comments"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Comentário criado com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "404" : {
            "description" : "Artigo não encontrado.",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar cadastrar o comentário.",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          }
        }
      }
    },
    "/comments/{commentId}/{permalink}" : {
      "put" : {
        "tags" : [ "Comentários" ],
        "summary" : "Atualiza o comentário de acordo com o ID do comentário e permalink do artigo passados como parâmetro. Para realizar esta operação o usuário precisa estar autenticado",
        "parameters" : [ {
          "name" : "commentId",
          "in" : "path",
          "description" : "Id do comentário a ser buscado.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "permalink",
          "in" : "path",
          "description" : "Permalink do artigo a ser buscado.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "Token gerado através da autenticação para ser feito o login.",
          "required" : true,
          "type" : "string",
          "format" : "string"
        }, {
          "in" : "body",
          "name" : "Comentários",
          "description" : "Altera atributos do comentário cadastrado.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Comments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Comentário atualizado com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "401" : {
            "description" : "Usuário não autorizado.",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "404" : {
            "description" : "Comentário ou artigo não encontrado.",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar atualizar o comentário.",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Comentários" ],
        "summary" : "Remove o artigo de acordo com o ID do comentário e permalink do artigo passado como parâmetro. Para realizar esta operação o usuário precisa estar autenticado",
        "parameters" : [ {
          "name" : "commentId",
          "in" : "path",
          "description" : "Id do comentário a ser buscado.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "permalink",
          "in" : "path",
          "description" : "Permalink do artigo a ser buscado.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "Token gerado através da autenticação para ser feito o login.",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Comentário removido com sucesso!",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "401" : {
            "description" : "Usuário não autorizado.",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "404" : {
            "description" : "Comentário ou artigo não encontrado.",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "500" : {
            "description" : "Erro no servidor ao tentar remover o artigo.",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "UserLogin" : {
      "required" : [ "password", "userName" ],
      "properties" : {
        "userName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "User" : {
      "required" : [ "name", "password", "userName" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "Author" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "Article" : {
      "required" : [ "permalink", "subTitle", "title" ],
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "subTitle" : {
          "type" : "string"
        },
        "permalink" : {
          "type" : "string"
        },
        "publicationDate" : {
          "type" : "string"
        },
        "updateDate" : {
          "type" : "string"
        }
      }
    },
    "Comments" : {
      "required" : [ "content" ],
      "properties" : {
        "content" : {
          "type" : "string"
        }
      }
    }
  }
}